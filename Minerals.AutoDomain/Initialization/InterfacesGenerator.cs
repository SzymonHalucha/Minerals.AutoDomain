namespace Minerals.AutoDomain.Initialization
{
    [Generator]
    public class InterfacesGenerator : IIncrementalGenerator
    {
        public void Initialize(IncrementalGeneratorInitializationContext context)
        {
            context.RegisterPostInitializationOutput(static (context) =>
            {
                var builder = new CodeBuilder();
                context.AddSource("IEntity.g.cs", GenerateIEntityInterface(builder));
                context.AddSource("IDomainEvent.g.cs", GenerateIDomainEventInterface(builder));
                context.AddSource("IAggregateRoot.g.cs", GenerateIAggregateRootInterface(builder));
            });
        }

        public static SourceText GenerateIEntityInterface(CodeBuilder builder)
        {
            builder.Clear();
            const string source = """
            namespace Minerals.AutoDomain
            {
                [global::System.Runtime.CompilerServices.CompilerGenerated]
                public interface IEntity
                {

                }
            }
            """;
            builder.AddAutoGeneratedHeader(Assembly.GetExecutingAssembly()).WriteLine(source);
            return SourceText.From(builder.ToString(), Encoding.UTF8);
        }

        public static SourceText GenerateIDomainEventInterface(CodeBuilder builder)
        {
            builder.Clear();
            const string source = """
            namespace Minerals.AutoDomain
            {
                [global::System.Runtime.CompilerServices.CompilerGenerated]
                public interface IDomainEvent
                {

                }
            }
            """;
            builder.AddAutoGeneratedHeader(Assembly.GetExecutingAssembly()).WriteLine(source);
            return SourceText.From(builder.ToString(), Encoding.UTF8);
        }

        public static SourceText GenerateIAggregateRootInterface(CodeBuilder builder)
        {
            builder.Clear();
            const string source = """
            namespace Minerals.AutoDomain
            {
                [global::System.Runtime.CompilerServices.CompilerGenerated]
                public interface IAggregateRoot : global::Minerals.AutoDomain.IEntity
                {
                    global::System.Collections.Generic.IReadOnlyCollection<global::Minerals.AutoDomain.IDomainEvent> DomainEvents { get; }

                    void AddDomainEvent(global::Minerals.AutoDomain.IDomainEvent domainEvent);
                    void RemoveDomainEvent(global::Minerals.AutoDomain.IDomainEvent domainEvent);
                    void ClearDomainEvents();
                }
            }
            """;
            builder.AddAutoGeneratedHeader(Assembly.GetExecutingAssembly()).WriteLine(source);
            return SourceText.From(builder.ToString(), Encoding.UTF8);
        }
    }
}